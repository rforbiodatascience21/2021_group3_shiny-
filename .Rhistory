# Create Shiny object
shinyApp(ui = ui, server = server)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
# Rely on the 'WorldPhones' dataset in the datasets
# package (which generally comes preloaded).
library(datasets)
library(tidyverse)
gravier_data <- read_csv("gravier_data.csv")
gravier_data <- gravier_data %>%
select(-outcome)
# Use a fluid Bootstrap layout
ui <- fluidPage(
# Give the page a title
titlePanel("Gene expression analysis"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gene1", "Gene 1:",
choices=colnames(gravier_data)),
selectInput("gene2", "Gene 2:",
choices=colnames(gravier_data)),
hr(),
helpText("Data from Gravier database")
),
# Create a spot for the barplot
mainPanel(
plotOutput("scatterplot")
)
)
)
# Rely on the 'Gene expression data' in the datasets
# Gravier data is loaded from the file.
# Define a server for the Shiny app
server <- function(input, output) {
output$scatterplot <- renderPlot({
p = ggplot(data = gravier_data) +
aes_string(x = input$"gene1", y = input$"gene2") +
geom_point()+
geom_smooth(method = lm)+
theme_minimal()+
theme(plot.title = element_text(size = 18))+
labs(title = "Gene expression correlation")
plot(p)
})
}
# Run the application
shinyApp(ui = ui, server = server)
shiny::runApp()
setwd("~/Desktop/Universitet/DTU/Bioinformatik_og_System_Biologi/1.Semester/R_for_BioScience/2021_group3_shiny-")
gravier_data <- read:csv("cancer_data_gravier.csv")
gravier_data <- read_csv("cancer_data_gravier.csv")
####################################
#    R for Bio Data ScienceGroup3  #
#              Group 3             #
####################################
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
library(tidyverse)
# loading gravier data
setwd("~/Desktop/Universitet/DTU/Bioinformatik_og_System_Biologi/1.Semester/R_for_BioScience/2021_group3_shiny-")
gravier_data <- read_csv("cancer_data_gravier.csv")
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage("Evaluating genes based on agegroup",
tabPanel("Density of gene expression",
sidebarPanel(selectInput("gene",
"Gene: ",
choices=colnames(gravier_data)),
selectInput("gene2",
"Gene 2",
choices=colnames(gravier_data)),
hr(),
helpText("Select two genes and get the pairwise
correlation.")
),
plotOutput("scatterplot")
),
# Create a spot for the barplot,
tabPanel("About the gravier data set", "Description:
Gravier et al. (2010) have considered small, invasive ductal
carcinomas without axillary lymph node involvement (T1T2N0)
to predict metastasis of small node-negative breast carcinoma.
Using comparative genomic hybridization arrays, they examined 168
patients over a five-year period. The 111 patients with no event
after diagnosis were labelled good, and the 57 patients with early
metastasis were labelled poor.
"),
HTML('<p><img src="sum_data.png"/></p>'),
tabPanel("Navbar 3", "This panel is intentionally left blank")
))
# Define server function
server <- function(input, output) {
output$scatterplot <- renderPlot({
plot1 <- ggplot(data = gravier_data,
mapping = aes_string(x = input$"gene",
y = input$"gene2")) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
theme(plot.title = element_text(size = 18))+
labs(title = "Pairwise coreleation between expression levels of two genes")
plot(plot1)
})
}
# Create Shiny object
shinyApp(ui = ui, server = server)
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
# Rely on the 'WorldPhones' dataset in the datasets
# package (which generally comes preloaded).
library(datasets)
library(tidyverse)
gravier_data <- read_csv("gravier_data.csv")
gravier_data <- gravier_data %>%
select(-outcome)
# Use a fluid Bootstrap layout
ui <- fluidPage(
# Give the page a title
titlePanel("Gene expression analysis"),
# Generate a row with a sidebar
sidebarLayout(
# Define the sidebar with one input
sidebarPanel(
selectInput("gene1", "Gene 1:",
choices=colnames(gravier_data)),
selectInput("gene2", "Gene 2:",
choices=colnames(gravier_data)),
hr(),
helpText("Data from Gravier database")
),
# Create a spot for the barplot
mainPanel(
plotOutput("scatterplot")
)
)
)
# Rely on the 'Gene expression data' in the datasets
# Gravier data is loaded from the file.
# Define a server for the Shiny app
server <- function(input, output) {
output$scatterplot <- renderPlot({
p = ggplot(data = gravier_data) +
aes_string(x = input$"gene1", y = input$"gene2") +
geom_point()+
geom_smooth(method = lm)+
theme_minimal()+
theme(plot.title = element_text(size = 18))+
labs(title = "Gene expression correlation")
plot(p)
})
}
# Run the application
shinyApp(ui = ui, server = server)
####################################
#    R for Bio Data ScienceGroup3  #
#              Group 3             #
####################################
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
library(tidyverse)
# loading gravier data
setwd("~/Desktop/Universitet/DTU/Bioinformatik_og_System_Biologi/1.Semester/R_for_BioScience/2021_group3_shiny-")
gravier_data <- read_csv("cancer_data_gravier.csv")
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage("Evaluating genes based on agegroup",
tabPanel("Density of gene expression",
sidebarPanel(selectInput("gene",
"Gene: ",
choices=colnames(gravier_data)),
selectInput("gene2",
"Gene 2",
choices=colnames(gravier_data)),
hr(),
helpText("Select two genes and get the pairwise
correlation.")
),
plotOutput("scatterplot")
),
# Create a spot for the barplot,
tabPanel("About the gravier data set", "Description:
Gravier et al. (2010) have considered small, invasive ductal
carcinomas without axillary lymph node involvement (T1T2N0)
to predict metastasis of small node-negative breast carcinoma.
Using comparative genomic hybridization arrays, they examined 168
patients over a five-year period. The 111 patients with no event
after diagnosis were labelled good, and the 57 patients with early
metastasis were labelled poor.
"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
))
# Define server function
server <- function(input, output) {
output$scatterplot <- renderPlot({
plot1 <- ggplot(data = gravier_data,
mapping = aes_string(x = input$"gene",
y = input$"gene2")) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
theme(plot.title = element_text(size = 18))+
labs(title = "Pairwise coreleation between expression levels of two genes")
plot(plot1)
})
}
# Create Shiny object
shinyApp(ui = ui, server = server)
####################################
#    R for Bio Data ScienceGroup3  #
#              Group 3             #
####################################
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
library(tidyverse)
# loading gravier data
setwd("~/Desktop/Universitet/DTU/Bioinformatik_og_System_Biologi/1.Semester/R_for_BioScience/2021_group3_shiny-")
gravier_data <- read_csv("cancer_data_gravier.csv")
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage("Evaluating genes based on agegroup",
tabPanel("Density of gene expression",
sidebarPanel(selectInput("gene",
"Gene: ",
choices=colnames(gravier_data)),
selectInput("gene2",
"Gene 2",
choices=colnames(gravier_data)),
hr(),
helpText("Select two genes and get the pairwise
correlation.")
),
plotOutput("scatterplot")
),
# Create a spot for the barplot,
tabPanel("About the gravier data set", "Description:
Gravier et al. (2010) have considered small, invasive ductal
carcinomas without axillary lymph node involvement (T1T2N0)
to predict metastasis of small node-negative breast carcinoma.
Using comparative genomic hybridization arrays, they examined 168
patients over a five-year period. The 111 patients with no event
after diagnosis were labelled good, and the 57 patients with early
metastasis were labelled poor.
"),
tabPanel("Navbar 3", "This panel is intentionally left blank")
))
# Define server function
server <- function(input, output) {
output$scatterplot <- renderPlot({
plot1 <- ggplot(data = gravier_data,
mapping = aes_string(x = input$"gene",
y = input$"gene2")) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
theme(plot.title = element_text(size = 18))+
labs(title = "Pairwise coreleation between expression levels of two genes")
plot(plot1)
})
}
# Create Shiny object
shinyApp(ui = ui, server = server)
####################################
#    R for Bio Data ScienceGroup3  #
#              Group 3             #
####################################
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
library(tidyverse)
# loading gravier data
setwd("~/Desktop/Universitet/DTU/Bioinformatik_og_System_Biologi/1.Semester/R_for_BioScience/2021_group3_shiny-")
gravier_data <- read_csv("cancer_data_gravier.csv")
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage("Plot",
tabPanel("Density of gene expression",
sidebarPanel(selectInput("gene",
"Gene: ",
choices=colnames(gravier_data)),
selectInput("gene2",
"Gene 2",
choices=colnames(gravier_data)),
hr(),
helpText("Select two genes and get the pairwise
correlation.")
),
plotOutput("scatterplot")
),
# Create a spot for the barplot,
tabPanel("About", "Description:
Gravier et al. (2010) have considered small, invasive ductal
carcinomas without axillary lymph node involvement (T1T2N0)
to predict metastasis of small node-negative breast carcinoma.
Using comparative genomic hybridization arrays, they examined 168
patients over a five-year period. The 111 patients with no event
after diagnosis were labelled good, and the 57 patients with early
metastasis were labelled poor.
"),
tabPanel("Navbar 3", "Another plot")
))
# Define server function
server <- function(input, output) {
output$scatterplot <- renderPlot({
plot1 <- ggplot(data = gravier_data,
mapping = aes_string(x = input$"gene",
y = input$"gene2")) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
theme(plot.title = element_text(size = 24))+
labs(title = "Pairwise coreleation between expression levels of two genes")
plot(plot1)
})
}
# Create Shiny object
shinyApp(ui = ui, server = server)
####################################
#    R for Bio Data ScienceGroup3  #
#              Group 3             #
####################################
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
library(tidyverse)
# loading gravier data
setwd("~/Desktop/Universitet/DTU/Bioinformatik_og_System_Biologi/1.Semester/R_for_BioScience/2021_group3_shiny-")
gravier_data <- read_csv("cancer_data_gravier.csv")
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage("Plot",
tabPanel("Density of gene expression",
sidebarPanel(selectInput("gene",
"Gene: ",
choices=colnames(gravier_data)),
selectInput("gene2",
"Gene 2",
choices=colnames(gravier_data)),
hr(),
helpText("Select two genes and get the pairwise
correlation.")
),
plotOutput("scatterplot")
),
# Create a spot for the barplot,
tabPanel("About", "Description:
Gravier et al. (2010) have considered small, invasive ductal
carcinomas without axillary lymph node involvement (T1T2N0)
to predict metastasis of small node-negative breast carcinoma.
Using comparative genomic hybridization arrays, they examined 168
patients over a five-year period. The 111 patients with no event
after diagnosis were labelled good, and the 57 patients with early
metastasis were labelled poor.
"),
tabPanel("PCA", "PCA-plot")
))
# Define server function
server <- function(input, output) {
output$scatterplot <- renderPlot({
plot1 <- ggplot(data = gravier_data,
mapping = aes_string(x = input$"gene",
y = input$"gene2")) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
theme(plot.title = element_text(size = 24))+
labs(title = "Pairwise coreleation between expression levels of two genes")
plot(plot1)
})
}
# Create Shiny object
shinyApp(ui = ui, server = server)
####################################
#    R for Bio Data ScienceGroup3  #
#              Group 3             #
####################################
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
library(tidyverse)
# loading gravier data
setwd("~/Desktop/Universitet/DTU/Bioinformatik_og_System_Biologi/1.Semester/R_for_BioScience/2021_group3_shiny-")
gravier_data <- read_csv("cancer_data_gravier.csv")
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage("Plot",
tabPanel("Density of gene expression",
sidebarPanel(selectInput("gene",
"Gene: ",
choices=colnames(gravier_data)),
selectInput("gene2",
"Gene 2",
choices=colnames(gravier_data)),
hr(),
helpText("Select two genes and get the pairwise
correlation.")
),
plotOutput("scatterplot")
),
tabPanel("PCA", "PCA-plot"),
tabPanel("About", "Description:
Gravier et al. (2010) have considered small, invasive ductal
carcinomas without axillary lymph node involvement (T1T2N0)
to predict metastasis of small node-negative breast carcinoma.
Using comparative genomic hybridization arrays, they examined 168
patients over a five-year period. The 111 patients with no event
after diagnosis were labelled good, and the 57 patients with early
metastasis were labelled poor.
")
))
# Define server function
server <- function(input, output) {
output$scatterplot <- renderPlot({
plot1 <- ggplot(data = gravier_data,
mapping = aes_string(x = input$"gene",
y = input$"gene2")) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
theme(plot.title = element_text(size = 24))+
labs(title = "Pairwise coreleation between expression levels of two genes")
plot(plot1)
})
}
# Create Shiny object
shinyApp(ui = ui, server = server)
####################################
#    R for Bio Data ScienceGroup3  #
#              Group 3             #
####################################
# Concepts about Reactive programming used by Shiny,
# https://shiny.rstudio.com/articles/reactivity-overview.html
# Load R packages
library(shiny)
library(shinythemes)
library(tidyverse)
# loading gravier data
setwd("~/Desktop/Universitet/DTU/Bioinformatik_og_System_Biologi/1.Semester/R_for_BioScience/2021_group3_shiny-")
gravier_data <- read_csv("cancer_data_gravier.csv")
# Define UI
ui <- fluidPage(theme = shinytheme("cerulean"),
navbarPage("Gravier et al. (2010) EDA",
tabPanel("Density of gene expression",
sidebarPanel(selectInput("gene",
"Gene: ",
choices=colnames(gravier_data)),
selectInput("gene2",
"Gene 2",
choices=colnames(gravier_data)),
hr(),
helpText("Select two genes and get the pairwise
correlation.")
),
plotOutput("scatterplot")
),
tabPanel("PCA", "PCA-plot"),
tabPanel("About", "Description:
Gravier et al. (2010) have considered small, invasive ductal
carcinomas without axillary lymph node involvement (T1T2N0)
to predict metastasis of small node-negative breast carcinoma.
Using comparative genomic hybridization arrays, they examined 168
patients over a five-year period. The 111 patients with no event
after diagnosis were labelled good, and the 57 patients with early
metastasis were labelled poor.
")
))
# Define server function
server <- function(input, output) {
output$scatterplot <- renderPlot({
plot1 <- ggplot(data = gravier_data,
mapping = aes_string(x = input$"gene",
y = input$"gene2")) +
geom_point() +
geom_smooth(method = lm) +
theme_minimal() +
theme(plot.title = element_text(size = 24))+
labs(title = "Pairwise coreleation between expression levels of two genes")
plot(plot1)
})
}
# Create Shiny object
shinyApp(ui = ui, server = server)
